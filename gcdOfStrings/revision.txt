For two strings s and t, we say "t divides s" if and only if s = t + t + t + ... + t + t (i.e., t is concatenated with itself one or more times).

Given two strings str1 and str2, return the largest string x such that x divides both str1 and str2.

 

Example 1:

Input: str1 = "ABCABC", str2 = "ABC"
Output: "ABC"
Example 2:

Input: str1 = "ABABAB", str2 = "ABAB"
Output: "AB"
Example 3:

Input: str1 = "LEET", str2 = "CODE"
Output: ""


Explanation:
If concatenating both strings do not provide the same string, that means that both of them are not substrings of each other. Return empty string.
If both strings are equivalent to each other, that means either or string1 or string2 are the same and is the answer.
At this point, there is a gcd between both strings. To find this recursively, recursively return the shortened string of the longer string and the other string in its entirety. The result will find the longest.

